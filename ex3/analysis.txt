# CSC 369 Fall 2010 - Excercise 3
#
# Zeeshan Qureshi
# g0zee@cdf.toronto.edu

Environment
-----------
A Virtual Machines under VirtualBox with:
  * 32 MB of Memory
  * 7513 MB of Disk Space
  * 556 MB of Swap
  * ArchLinux x86 with Kernel 2.6.35

Rationale
---------
I decided to run the tests under a VM, because I could control how much
memory was available to the system and thus compare and contrast between a
small and large dataset under a reasonable amount of time.

Since modern CPUs also support hardware based virtualization, the
running time of the tests was pretty close to what I got outside the VM.

The VM video adapter took off 8 MB of RAM, and the base Arch install was using
around 23 MB, thus the application effectively had a megabyte of free space
which helped in seeing a significant difference in the datasets.

Tests
-----
I wrote a shell script[pageTest.sh] that ran the 'testheap' and 'testbh' 
tests for a various number of operations.

I also made the script change the DATASIZE after each set was completed.

The tested values were:
  * DATASIZEs of 8 16 32 64 128 and 256
  * Operations of 10k 50k 100k and 500k

I ran the test 3 times for each DATASIZE/num_ops combo to take into
account if the system was under heavy stress or other factors.

Results
-------

Algorithm  DATASIZE  num_ops  MinFlt  MajFlt  UTime  STime  VSize  RSS 
heap  8  10000  26  0  0  0  1867776  125  
heap  16  10000  47  0  0  0  1953792  124
heap  32  10000  86  0  1  0  2113536  190
heap  64  10000  164  0  0  0  2433024  257
heap  128  10000  320  0  1  0  3072000  389
heap  256  10000  633  0  0  1  4354048  718
B-Heap  8  10000  7  0  1  0  1785856  124  
B-Heap  16  10000  7  0  1  0  1916928  123
B-Heap  32  10000  7  0  1  0  2048000  189
B-Heap  64  10000  7  0  2  0  2310144  220
B-Heap  128  10000  7  0  2  0  2965504  379
B-Heap  256  10000  7  0  3  0  4276224  699

Algorithm  DATASIZE  num_ops  MinFlt  MajFlt  UTime  STime  VSize  RSS 
heap  8  50000  105  0  5  0  2191360  190  
heap  16  50000  204  0  5  0  2592768  256
heap  32  50000  398  0  6  0  3391488  454
heap  64  50000  789  0  7  1  4993024  850
heap  128  50000  1570  0  9  1  8192000  1642
heap  256  50000  3133  0  10  6  14594048  3226
B-Heap  8  50000  7  0  11  0  2179072  187
B-Heap  16  50000  7  0  13  0  2572288  283
B-Heap  32  100000  7  0  29  0  4931584  859
B-Heap  64  50000  7  0  13  0  4931584  859
B-Heap  128  50000  7  0  16  0  8081408  1628
B-Heap  256  50000  6  0  18  0  14512128  3199

Algorithm  DATASIZE  num_ops  MinFlt  MajFlt  UTime  STime  VSize  RSS 
heap  8  100000  203  0  11  0  2592768  256
heap  16  100000  398  0  12  0  3391488  454
heap  32  100000  789  0  12  1  4993024  850
heap  64  100000  1570  0  15  3  8192000  1642
heap  128  100000  3169  0  23  3  14594048  3195
heap  256  100000  140696  70622  556  1963  27394048  3886
B-Heap  8  100000  7  0  23  0  2572288  284
B-Heap  16  100000  7  0  32  0  3358720  476
B-Heap  32  50000  7  0  14  0  3358720  475
B-Heap  64  100000  6  0  31  0  8081408  1628
B-Heap  128  100000  6  0  33  0  14512128  3199
B-Heap  256  100000  73520  38748  304  1121  27369472  3771

Algorithm  DATASIZE  num_ops  MinFlt  MajFlt  UTime  STime  VSize  RSS 
heap  8  500000  984  0  66  4  5791744  1048
heap  16  500000  1961  0  76  4  9793536  2038
heap  32  500000  4150  15  90  11  17793024  3902
heap  64  500000  1163705  643863  3992  19592  33792000  3506
heap  128  500000  2598984  1756368  6093  67020  65794048  2895
heap  256  500000  3834548  3109666  7360  151628  129794048  2779
B-Heap  8  500000  7  0  154  0  5718016  1051
B-Heap  16  500000  7  0  158  1  9785344  2045
B-Heap  32  500000  102  15  163  2  17788928  3561
B-Heap  64  500000  391003  247868  1293  6309  33796096  3855
B-Heap  128  500000  783203  605034  2253  20369  65810432  2700
B-Heap  256  500000  1388438  1190257  3018  53653  129835008  2593
